clone emscriten (https://github.com/emscripten-core/emscripten.git)
######clone libwebp (https://chromium.googlesource.com/webm/libwebp)
clone llvm (https://github.com/llvm/llvm-project.git)
clone binaryen https://github.com/WebAssembly/binaryen.git

cd emscriten
mkdir build
cd build/
cmake <path to llvm> -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS='lld;clang' -DLLVM_TARGETS_TO_BUILD="host;WebAssembly" -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF
cmake --build . -j NNN

NNN = no of CPU cores to faster the build process;


"<path to llvm>" should point to "llvm-project/llvm" directory



cd binaryen
cmake . && make -j NNN

NNN = no of CPU cores to faster the build process;

cd emscriten
./emcc -v
this command "./emcc -v" will create .emscripten file 

in .emscripten file 
point "LLVM_ROOT" to <path to emscripten>/build/bin
point "BINARYEN_ROOT" to <path to binaryen>


restest "./emcc -v" comand now all should be ok to show version of emcc, clang and InstalledDir etc info


create hello_world.c with contents as bellow

#include <stdio.h>
int main() {
  printf("hello, world!\n");
  return 0;
}

then run 
./emscripten/emcc ./hello_world.c -o hello_world.html

then run any server to load hello_world.html into browser
i used python simple server

node server.js   or // python -m SimpleHTTPServer 8000 <-- python server have issue with content-type for wasm file

then in Browser load http://localhost:8000/hello_world.html

you should see hello_world in console and "dev/diplay/debug area" in page



now clone secp256k1 (https://github.com/kaspanet/secp256k1.git)
copy www.c to secp256k1/src (or find a way to include secp256k1 lib into www.c)
cd secp256k1
./configure
../emscripten/emconfigure ./configure
../emscripten/emmake make
../emscripten/emcc src/www.o -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' -o ../http/www.html

/*
#######../emscripten/emcc src/libsecp256k1_la-secp256k1.o -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' -o www.html

########../emscripten/emcc src/www-www.o src/www-secp256k1.o -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' -o ../http/www.html
*/


